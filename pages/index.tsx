import Head from "next/head";
import { TypedUseSelectorHook, useDispatch, useSelector } from "react-redux";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect } from "react";
import { fetchUsers, userActions } from "@/redux/slices/userSlice";
import CardGrid from "@/components/CardGrid";
import Search from "@/components/search";
import { useState } from "react";
import NewUserModal from "../components/modal/CreateUser";
import { User } from "@/types";
import { FiUserPlus } from "react-icons/fi";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const dispatch = useAppDispatch();
  const { users, isLoading, error } = useAppSelector(
    (state) => state.usersReducer
  );
  const [isNewUserModalOpen, setIsNewUserModalOpen] = useState(false);

  useEffect(() => {
    dispatch(fetchUsers());
  }, [dispatch]);

  const handleNewUserClick = () => {
    setIsNewUserModalOpen(true);
  };

  const handleSaveNewUser = (updatedUser: User) => {
    dispatch(
      userActions.upsertUser({
        id: updatedUser.login.uuid,
        email: updatedUser.email,
        city: updatedUser.location.city,
        country: updatedUser.location.country,
        streetName: updatedUser.location.street.name,
        streetNumber: updatedUser.location.street.number,
        firstName: updatedUser.name.first,
        lastName: updatedUser.name.last,
      })
    );
    setIsNewUserModalOpen(false);
  };

  return (
    <>
      <Head>
        <title>users libary</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="bg-gray-800 text-white">
        <div className="flex items-center justify-between px-4 py-3">
          <div className="flex items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 20 20"
              fill="currentColor"
              className="w-8 h-8 text-yellow-500 mr-2"
            >
              <path
                fillRule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm-6.708-6.708a6 6 0 018.484 0l1.414-1.414a8 8 0 00-11.314 0l1.414 1.414zm1.414 1.414a6 6 0 010-8.484l1.414-1.414a8 8 0 000 11.314l-1.414-1.414zm8.484 0a6 6 0 010 8.484l-1.414 1.414a8 8 0 000-11.314l1.414 1.414zm-1.414-1.414a6 6 0 01-8.484 0l-1.414 1.414a8 8 0 0011.314 0l-1.414-1.414z"
                clipRule="evenodd"
              />
            </svg>
            <span className="font-bold text-lg">Users Library</span>
          </div>
          <button className="bg-yellow-500 hover:bg-yellow-600 text-white font-semibold py-2 px-4 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500">
            <FiUserPlus size={35} onClick={handleNewUserClick} className="" />
          </button>
        </div>
      </header>
      <main className={styles.main}>
        <div className="flex justify-between">
          <Search users={users} />
        </div>
        {isLoading ? (
          <div>Loading...</div>
        ) : error ? (
          <div>Error: {error}</div>
        ) : (
          <>
            <NewUserModal
              isOpen={isNewUserModalOpen}
              onSave={handleSaveNewUser}
              onClose={() => setIsNewUserModalOpen(false)}
            />
          </>
        )}
      </main>
    </>
  );
}
